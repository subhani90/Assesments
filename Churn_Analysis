-title: "Customer Churn Analysis"
//install libraries
install.packages('plyr')
library(plyr)
install.packages('corrplot')
library(corrplot)
install.packages('ggplot2')
library(ggplot2)
install.packages('gridExtra')
library(gridExtra)
install.packages('ggthemes')
library(ggthemes)
install.packages('caret')
library(caret)
install.packages('MASS')
library(MASS)
install.packages('randomForest')
library(randomForest)
install.packages('party')
library(party)

churn <- read.csv('Telco-Customer-Churn.csv')

str(churn)

removing missing values
sapply(churn, function(x) sum(is.na(x)))


churn <- churn[complete.cases(churn), ]

dim(churn)
unique(churn['OnlineSecurity'])

library(plyr)

//change “No internet service” to “No” for six columns
cols_recode1 <- c(10:15)
for (i in 1:ncol(churn[, cols_recode1])) {
      churn[, cols_recode1][, i] <- as.factor(mapvalues(churn[, cols_recode1][, i], from = c("No internet service"), to = c("No")))
}

churn$MultipleLines <- as.factor(mapvalues(churn$MultipleLines, 
                                           from=c("No phone service"),
                                           to=c("No")))
                                           
min(churn$tenure); max(churn$tenure)

group_tenure <- function(tenure){
    if (tenure >= 0 & tenure <= 12){
        return('0-12 Month')
    }else if(tenure > 12 & tenure <= 24){
        return('12-24 Month')
    }else if (tenure > 24 & tenure <= 48){
        return('24-48 Month')
    }else if (tenure > 48 & tenure <=60){
        return('48-60 Month')
    }else if (tenure > 60){
        return('> 60 Month')
    }
}
churn$tenure_group <- sapply(churn$tenure,group_tenure)
churn$tenure_group <- as.factor(churn$tenure_group)
str(churn)

//Change the values in column “SeniorCitizen” from 0 or 1 to “No” or “Yes”.

churn$SeniorCitizen <- as.factor(mapvalues(churn$SeniorCitizen,
                                      from=c("0","1"),
                                      to=c("No", "Yes")))
                                      
//Remove the columns we do not need for the analysis.                                     
churn$customerID <- NULL
churn$tenure <- NULL 

str(churn)
library(corrplot)
//Correlation between numeric variables

numeric.var <- sapply(churn, is.numeric)
corr.matrix <- cor(churn[,numeric.var])
corrplot(corr.matrix, main="\n\nCorrelation Plot for Numerical Variables", method="number")

//The Monthly Charges and Total Charges are correlated. So one of them will be removed from the model. I remove Total Charges.

churn$TotalCharges <- NULL
str(churn)

//Bar plots of categorical variables

library(ggplot2)

p1 <- ggplot(churn, aes(x=gender)) + ggtitle("Gender") + xlab("Gender") +
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#E69F00") +
      ylab("Percentage") + coord_flip() + theme_minimal()


p2 <- ggplot(churn, aes(x=SeniorCitizen)) + ggtitle("Senior Citizen") + 
      xlab("Senior Citizen") + geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5) + ylab("Percentage") + coord_flip() + theme_minimal()
      

p3 <- ggplot(churn, aes(x=Partner)) + ggtitle("Partner") + xlab("Partner") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, color="blue", fill="steelblue") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p4 <- ggplot(churn, aes(x=Dependents)) + ggtitle("Dependents") + xlab("Dependents") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#56B4E9") + 
      ylab("Percentage") + coord_flip() + theme_minimal()    
      
library(gridExtra)   
grid.arrange(p1, p2, p3, p4, ncol=2)

p5 <- ggplot(churn, aes(x=PhoneService)) + ggtitle("Phone Service") + 
      xlab("Phone Service") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#E69F00") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p6 <- ggplot(churn, aes(x=MultipleLines)) + ggtitle("Multiple Lines") + 
      xlab("Multiple Lines") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#FF9999") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p7 <- ggplot(churn, aes(x=InternetService)) + ggtitle("Internet Service") + 
      xlab("Internet Service") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#F0E442") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p8 <- ggplot(churn, aes(x=OnlineSecurity)) + ggtitle("Online Security") + 
      xlab("Online Security") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#009E73") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

grid.arrange(p5, p6, p7, p8, ncol=2)

p9 <- ggplot(churn, aes(x=OnlineBackup)) + ggtitle("Online Backup") + 
      xlab("Online Backup") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#E69F00") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p10 <- ggplot(churn, aes(x=DeviceProtection)) + ggtitle("Device Protection") + 
      xlab("Device Protection") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#F0E442") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p11 <- ggplot(churn, aes(x=TechSupport)) + ggtitle("Tech Support") + 
      xlab("Tech Support") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#0072B2") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p12 <- ggplot(churn, aes(x=StreamingTV)) + ggtitle("Streaming TV") + 
      xlab("Streaming TV") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#D55E00") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

grid.arrange(p9, p10, p11, p12, ncol=2)

p13 <- ggplot(churn, aes(x=StreamingMovies)) + ggtitle("Streaming Movies") + 
      xlab("Streaming Movies") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#D55E00") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p14 <- ggplot(churn, aes(x=Contract)) + ggtitle("Contract") + 
      xlab("Contract") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#CC79A7") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p15 <- ggplot(churn, aes(x=PaperlessBilling)) + ggtitle("Paperless Billing") + 
      xlab("Paperless Billing") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5, fill="#009E73") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p16 <- ggplot(churn, aes(x=PaymentMethod)) + ggtitle("Payment Method") + 
      xlab("Payment Method") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#0072B2") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

p17 <- ggplot(churn, aes(x=tenure_group)) + ggtitle("Tenure Group") + 
      xlab("Tenure Group") + 
      geom_bar(aes(y = 100*(..count..)/sum(..count..)), width = 0.5,fill="#E69F00") + 
      ylab("Percentage") + coord_flip() + theme_minimal()

grid.arrange(p13, p14, p15, p16, p17, ncol=2)

//We can observe that all of the categorical variables seem to have a reasonably broad distribution, therefore, all of them will be kept for the further analysis.

//Data Modelling

intrain <- createDataPartition(churn$Churn, p = 0.7, list = FALSE)
set.seed(2018)
training <- churn[intrain, ]  //70% fro training data
testing <- churn[- intrain, ]  // 30% for testing data


dim(training); dim(testing)

str(training)
str(testing)

install.packages('rpart')
library(rpart)

rpart(Churn~.,data=training)->mod_class

predict(mod_class,testing,type="class") -> result_class
table(testing$Churn,result_class)

(1441+107)/(1441+107+349+211)


install.packages('caret')
library(caret)
install.packages('e1071',dependencies=TRUE)

confusionMatrix(table(testing$Churn,result_class))




